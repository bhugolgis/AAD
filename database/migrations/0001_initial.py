# Generated by Django 4.2.5 on 2023-10-17 04:56

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('emailId', models.EmailField(blank=True, max_length=255, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('otpChecked', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='familyHeadDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('familyId', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('mobileNo', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('plotNo', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('area', models.CharField(blank=True, max_length=255, null=True)),
                ('totalFamilyMembers', models.IntegerField(default=0)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('partialSubmit', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surveyDoneBy', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='familyMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memberId', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=900, null=True)),
                ('gender', models.CharField(blank=True, max_length=15, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('mobileNo', models.BigIntegerField(blank=True, null=True)),
                ('aadharCard', models.BigIntegerField(blank=True, null=True)),
                ('abhaId', models.CharField(blank=True, max_length=100, null=True)),
                ('pulse', models.CharField(blank=True, max_length=50, null=True)),
                ('bloodPressure', models.CharField(blank=True, max_length=50, null=True)),
                ('weight', models.CharField(blank=True, max_length=50, null=True)),
                ('height', models.CharField(blank=True, max_length=50, null=True)),
                ('BMI', models.CharField(blank=True, max_length=50, null=True)),
                ('Questionnaire', models.JSONField(blank=True, null=True)),
                ('bloodCollectionLocation', models.CharField(blank=True, choices=[('Home', 'Home'), ('Center', 'Center'), ('Denied', 'Denied')], max_length=20, null=True)),
                ('questionsConsent', models.BooleanField(default=False)),
                ('aadharAndAbhaConsent', models.BooleanField(default=False)),
                ('demandLetter', models.ImageField(blank=True, null=True, upload_to='demand letter')),
                ('bloodConsent', models.BooleanField(default=False)),
                ('cbacScore', models.IntegerField(default=0)),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('familyHead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='family_head_member', to='database.familyheaddetails')),
                ('familySurveyor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='familysurveyor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='healthPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('healthPostName', models.CharField(blank=True, max_length=1000, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='phlebotomist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testReport', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('HB', 'HB'), ('CBC', 'CBC'), ('Platelet Count', 'Platelet Count'), ('PT/INR', 'PT/INR'), ('RBS', 'RBS'), ('S. Total Bilirubin', 'S. Total BilirubinB'), ('S. Direct Bilirubin', 'S. Direct Bilirubin'), ('SGPT/ALT', 'SGPT/ALT'), ('SGOT/AST', 'SGOT/AST'), ('Urea / BUN', 'Urea / BUN'), ('S. Creatinine', 'S. Creatinine'), ('ALP', 'ALP'), ('S. Total Proteins', 'S. Total Proteins'), ('S. Albumin', 'S. Albumin'), ('S. Total Calcium', 'S. Total Calcium'), ('S. Uric Acid', 'S. Uric Acid'), ('S. Cholesterol', 'S. Cholesterol'), ('S. Triglycerides ', 'S. Triglycerides '), ('S. HDL (Direct)', 'S. HDL (Direct)'), ('LDL', 'LDL'), ('VLDL', 'VLDL'), ('Amylase', 'Amylase'), ('T3', 'T3'), ('T4', 'T4'), ('HbA1C', 'HbA1C'), ('S. Electrolytes', 'S. Electrolytes'), ('S. TIBC', 'S. TIBC'), ('LDH', 'LDH'), ('Vit. D', 'Vit. D'), ('Vit. B12', 'Vit. B12'), ('Immunoassays', 'Immunoassays')], max_length=255, null=True), size=None)),
                ('date', models.DateField(blank=True, null=True)),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='family_Member', to='database.familymembers')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phlebotomist_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wardName', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestTube',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcodeNumber', models.CharField(blank=True, max_length=50, null=True)),
                ('phlebo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phlebo_details', to='database.phlebotomist')),
            ],
        ),
        migrations.CreateModel(
            name='sendOtp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('otpVerified', models.BooleanField(default=False)),
                ('createdDate', models.DateTimeField(auto_now_add=True)),
                ('expireyDate', models.DateTimeField(blank=True, null=True)),
                ('registerUser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Registeruser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sectionName', models.CharField(blank=True, max_length=255, null=True)),
                ('healthPost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='healthPost_name', to='database.healthpost')),
            ],
        ),
        migrations.AddField(
            model_name='healthpost',
            name='ward',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ward_name', to='database.ward'),
        ),
        migrations.CreateModel(
            name='area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('areas', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(max_length=1000), blank=True, null=True, size=None)),
                ('healthPost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='area_healthpost_name', to='database.healthpost')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='section_name', to='database.section'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='supervisor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervisorId', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
